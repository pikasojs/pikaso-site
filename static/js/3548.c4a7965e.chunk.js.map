{"version":3,"file":"static/js/3548.c4a7965e.chunk.js","mappings":"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","sources":["components/BasePopover/index.tsx","components/CodeHighlighter/index.tsx","components/ColorPicker/index.tsx","components/Markdown/index.tsx","components/RangeSlider/index.tsx","hooks/use-pikaso.ts","pages/Core/Label/index.tsx","../node_modules/react-use/esm/useTitle.js"],"sourcesContent":["import { useState } from 'react'\nimport { Button, Popover } from '@mui/material'\n\ninterface ButtonProps {\n  id: string | undefined\n  isOpen: boolean\n}\n\ninterface Props {\n  buttonRenderer: (buttonProps: ButtonProps) => React.ReactNode\n  children:\n    | React.ReactNode\n    | (({ close }: { close: () => void }) => React.ReactNode)\n}\n\nexport function BasePopover({ buttonRenderer, children }: Props) {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const handleOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? `base-popover` : undefined\n\n  return (\n    <>\n      <Button\n        disableRipple\n        aria-describedby={id}\n        style={{\n          background: 'none',\n          cursor: 'pointer'\n        }}\n        onClick={handleOpen}\n      >\n        {buttonRenderer({\n          id,\n          isOpen: open\n        })}\n      </Button>\n\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n      >\n        {typeof children === 'function'\n          ? children({ close: handleClose })\n          : children}\n      </Popover>\n    </>\n  )\n}\n","import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dracula as theme } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\n// materialDark\n\nimport type { SyntaxHighlighterProps } from 'react-syntax-highlighter'\n\ninterface Props extends SyntaxHighlighterProps {\n  children: string\n}\n\nexport function CodeHighlighter({ children, ...props }: Props) {\n  return (\n    <SyntaxHighlighter style={theme} showLineNumbers wrapLongLines {...props}>\n      {children}\n    </SyntaxHighlighter>\n  )\n}\n","import { useState } from 'react'\nimport { Avatar, Chip } from '@mui/material'\nimport { SketchPicker } from 'react-color'\nimport type { ColorResult } from 'react-color'\n\nimport { BasePopover } from '../BasePopover'\n\ninterface Props {\n  title: string\n  defaultColor: string\n  onChange: (color: string) => void\n}\n\nexport function ColorPicker({ title, defaultColor, onChange }: Props) {\n  const [color, setColor] = useState(defaultColor)\n\n  const onSwatchHover = (color: ColorResult) => {\n    setColor(color.hex)\n    onChange(color.hex)\n  }\n\n  const onChangeColor = (color: ColorResult) => {\n    setColor(color.hex)\n    onChange(color.hex)\n  }\n\n  return (\n    <BasePopover\n      buttonRenderer={({ id, isOpen }) => (\n        <Chip\n          aria-describedby={id}\n          size=\"medium\"\n          avatar={\n            <Avatar\n              sx={{\n                bgcolor: color,\n                borderColor: 'primary.main'\n              }}\n            >\n              &nbsp;\n            </Avatar>\n          }\n          label={<strong>{title}</strong>}\n          variant=\"outlined\"\n          color=\"info\"\n          sx={{\n            cursor: 'pointer',\n            borderColor: isOpen ? 'primary.main' : 'info',\n            color: isOpen ? 'primary.main' : 'info'\n          }}\n        />\n      )}\n    >\n      <SketchPicker\n        color={color}\n        presetColors={[]}\n        onSwatchHover={onSwatchHover}\n        onChange={onChangeColor}\n      />\n    </BasePopover>\n  )\n}\n","import { useMemo } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport { Link } from 'react-router-dom'\n\nimport { CodeHighlighter } from '../CodeHighlighter'\n\ninterface Props {\n  children: string | (() => string)\n}\n\nfunction normalizeText(input: string): string {\n  const output = []\n  const values = input.split('\\n')\n  let skipTrim = false\n\n  const isCodeBlock = (value = '') =>\n    value.startsWith('```') || value.startsWith('~~~')\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i]\n\n    if (isCodeBlock(value)) {\n      skipTrim = true\n    }\n\n    output.push(skipTrim ? value : value.trim())\n\n    if (skipTrim && isCodeBlock(values[i + 1])) {\n      skipTrim = false\n    }\n  }\n\n  return output.join('\\n')\n}\n\nexport function Markdown({ children }: Props) {\n  const value = typeof children === 'string' ? children : children()\n  const normalized = useMemo(() => normalizeText(value), [value])\n\n  return (\n    <ReactMarkdown\n      skipHtml\n      remarkPlugins={[gfm]}\n      children={normalized}\n      components={{\n        a({ href, children }) {\n          const isExternalLink =\n            href?.startsWith('/api/') || href?.startsWith('http')\n\n          return isExternalLink ? (\n            <a href={href} target=\"_blank\">\n              {children}\n            </a>\n          ) : (\n            <Link to={href!}>{children}</Link>\n          )\n        },\n        code({ node, inline, className, children, ...props }) {\n          const match = /language-(\\w+)/.exec(className || '')\n          return !inline && match ? (\n            // @ts-ignore\n            <CodeHighlighter\n              children={String(children).replace(/\\n$/, '')}\n              language={match[1]}\n              PreTag=\"div\"\n              {...props}\n            />\n          ) : (\n            <code className={className} {...props}>\n              {children}\n            </code>\n          )\n        }\n      }}\n    />\n  )\n}\n","import { useState } from 'react'\nimport { Box, Avatar, Chip, Slider, SliderThumb } from '@mui/material'\nimport type { SliderProps } from '@mui/material/Slider'\n\nimport { styled } from '@mui/styles'\nimport type { Theme } from '@mui/material'\n\nimport { BasePopover } from '../BasePopover'\n\nconst AirbnbSlider = styled(Slider)(({ theme }: { theme: Theme }) => ({\n  color: '#3a8589',\n  height: 3,\n  padding: '13px 0',\n  '& .MuiSlider-thumb': {\n    height: 27,\n    width: 27,\n    backgroundColor: '#fff',\n    border: '1px solid currentColor',\n    '&:hover': {\n      boxShadow: '0 0 0 8px rgba(58, 133, 137, 0.16)'\n    },\n    '& .airbnb-bar': {\n      height: 9,\n      width: 1,\n      backgroundColor: 'currentColor',\n      marginLeft: 1,\n      marginRight: 1\n    }\n  },\n  '& .MuiSlider-track': {\n    height: 3\n  },\n  '& .MuiSlider-rail': {\n    color: theme.palette.mode === 'dark' ? '#bfbfbf' : '#d8d8d8',\n    opacity: theme.palette.mode === 'dark' ? undefined : 1,\n    height: 3\n  }\n}))\n\ninterface AirbnbThumbComponentProps extends React.HTMLAttributes<unknown> {}\n\nfunction AirbnbThumbComponent(props: AirbnbThumbComponentProps) {\n  const { children, ...other } = props\n  return (\n    <SliderThumb {...other}>\n      {children}\n      <span className=\"airbnb-bar\" />\n      <span className=\"airbnb-bar\" />\n      <span className=\"airbnb-bar\" />\n    </SliderThumb>\n  )\n}\n\ninterface Props {\n  title: string\n  defaultValue: number | number[]\n  SliderProps?: SliderProps\n  valueLabelFormat?: (value: number | number[]) => string | number | number[]\n  onChange: (value: number | number[]) => void\n}\n\nexport function RangeSlider({\n  title,\n  defaultValue,\n  SliderProps,\n  valueLabelFormat = value => value,\n  onChange\n}: Props) {\n  const [value, setValue] = useState(defaultValue)\n\n  const onChangeSlider = (event: Event, newValue: number | number[]) => {\n    setValue(newValue)\n    onChange(newValue)\n  }\n\n  return (\n    <BasePopover\n      buttonRenderer={({ id, isOpen }) => (\n        <Chip\n          aria-describedby={id}\n          size=\"medium\"\n          avatar={\n            <Avatar\n              sx={{\n                borderColor: 'primary.main'\n              }}\n            >\n              {typeof valueLabelFormat === 'function'\n                ? valueLabelFormat(value)\n                : value ?? ''}\n            </Avatar>\n          }\n          label={<strong>{title}</strong>}\n          variant=\"outlined\"\n          color=\"info\"\n          sx={{\n            cursor: 'pointer',\n            borderColor: isOpen ? 'primary.main' : 'info',\n            color: isOpen ? 'primary.main' : 'info'\n          }}\n        />\n      )}\n    >\n      <Box px={4} pt={5} pb={2} width=\"300px\">\n        <AirbnbSlider\n          valueLabelDisplay=\"on\"\n          components={{ Thumb: AirbnbThumbComponent }}\n          valueLabelFormat={valueLabelFormat}\n          {...SliderProps}\n          value={value}\n          onChange={onChangeSlider}\n        />\n      </Box>\n    </BasePopover>\n  )\n}\n","import { useRef, useState, useEffect, RefObject } from 'react'\n\nimport { Pikaso } from 'pikaso'\nimport type { Settings, BaseShapes, RegisterShapesFn } from 'pikaso'\n\nexport default function usePikaso<T extends BaseShapes = BaseShapes>(\n  options: Partial<Settings> = {},\n  registerShapes?: RegisterShapesFn<T>\n): [RefObject<HTMLDivElement>, Pikaso<T> | null] {\n  const [instance, setInstance] = useState<Pikaso<T> | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const editor = new Pikaso<T>(\n      {\n        container: ref.current as HTMLDivElement,\n        ...options\n      },\n      registerShapes\n    )\n\n    setInstance(editor)\n  }, [])\n\n  useEffect(() => {\n    instance &&\n      window.addEventListener('resize', () => {\n        instance.board.rescale()\n      })\n  }, [instance])\n\n  return [ref, instance]\n}\n","import { useEffect } from 'react'\nimport { Box } from '@mui/material'\nimport { LabelModel } from 'pikaso'\nimport { useTitle } from 'react-use'\nimport raw from 'raw.macro'\n\nimport usePikaso from 'src/hooks/use-pikaso'\nimport { ColorPicker } from 'src/components/ColorPicker'\nimport { RangeSlider } from 'src/components/RangeSlider'\nimport { Markdown } from 'src/components/Markdown'\n\nconst doc = raw('./doc.md')\n\nexport default function Label() {\n  useTitle('Pikaso | Core Components | Label')\n\n  const [ref, editor] = usePikaso({\n    selection: {\n      transformer: {\n        borderStroke: '#262626',\n        anchorFill: '#262626'\n      }\n    }\n  })\n\n  useEffect(() => {\n    editor &&\n      editor.shapes.label.insert({\n        container: {\n          x: 300,\n          y: 100\n        },\n        tag: {\n          fill: '#262626',\n          cornerRadius: 0\n        },\n        text: {\n          text: 'Pikaso Rocks',\n          fill: '#00ff00',\n          fontSize: 60\n        }\n      })\n  }, [editor])\n\n  const handleChangeColor = (fill: string) => {\n    const shape = editor?.board.shapes.find(() => true) as LabelModel\n\n    shape?.updateText({\n      fill\n    })\n  }\n\n  const handleChangeBackgroundColor = (fill: string) => {\n    const shape = editor?.board.shapes.find(() => true) as LabelModel\n\n    shape?.updateTag({\n      fill\n    })\n  }\n\n  const handleChangeFontSize = (fontSize: number | number[]) => {\n    const shape = editor?.board.shapes.find(() => true) as LabelModel\n\n    shape?.updateText({\n      fontSize: fontSize as number\n    })\n  }\n\n  const handleChangeBorderRadius = (radius: number | number[]) => {\n    const shape = editor?.board.shapes.find(() => true) as LabelModel\n\n    shape?.updateTag({\n      cornerRadius: radius as number\n    })\n  }\n\n  return (\n    <>\n      <Markdown>{doc}</Markdown>\n\n      <Box mb={3}>\n        <div\n          ref={ref}\n          style={{\n            margin: '0 auto',\n            background: '#CBC3E3',\n            width: '100%',\n            height: '300px'\n          }}\n        />\n      </Box>\n\n      <Box>\n        <ColorPicker\n          title=\"Font Color\"\n          defaultColor=\"#00ff00\"\n          onChange={handleChangeColor}\n        />\n        <ColorPicker\n          title=\"Background Color\"\n          defaultColor=\"#262626\"\n          onChange={handleChangeBackgroundColor}\n        />\n        <RangeSlider\n          title=\"Font Size\"\n          defaultValue={60}\n          SliderProps={{\n            min: 20,\n            max: 80,\n            valueLabelDisplay: 'on'\n          }}\n          onChange={handleChangeFontSize}\n        />\n\n        <RangeSlider\n          title=\"Border Radius\"\n          defaultValue={0}\n          SliderProps={{\n            min: 0,\n            max: 20,\n            valueLabelDisplay: 'on'\n          }}\n          onChange={handleChangeBorderRadius}\n        />\n      </Box>\n    </>\n  )\n}\n","import { useEffect, useRef } from 'react';\nvar DEFAULT_USE_TITLE_OPTIONS = {\n    restoreOnUnmount: false,\n};\nfunction useTitle(title, options) {\n    if (options === void 0) { options = DEFAULT_USE_TITLE_OPTIONS; }\n    var prevTitleRef = useRef(document.title);\n    if (document.title !== title)\n        document.title = title;\n    useEffect(function () {\n        if (options && options.restoreOnUnmount) {\n            return function () {\n                document.title = prevTitleRef.current;\n            };\n        }\n        else {\n            return;\n        }\n    }, []);\n}\nexport default typeof document !== 'undefined' ? useTitle : function (_title) { };\n"],"names":["BasePopover","buttonRenderer","children","useState","anchorEl","setAnchorEl","handleClose","open","Boolean","id","undefined","disableRipple","style","background","cursor","onClick","event","currentTarget","isOpen","onClose","anchorOrigin","vertical","horizontal","close","CodeHighlighter","props","theme","showLineNumbers","wrapLongLines","ColorPicker","title","defaultColor","onChange","color","setColor","size","avatar","sx","bgcolor","borderColor","label","variant","presetColors","onSwatchHover","hex","Markdown","value","normalized","useMemo","input","output","values","split","skipTrim","isCodeBlock","startsWith","i","length","push","trim","join","normalizeText","skipHtml","remarkPlugins","gfm","components","a","href","target","to","code","node","inline","className","match","exec","String","replace","language","PreTag","AirbnbSlider","styled","Slider","height","padding","width","backgroundColor","border","boxShadow","marginLeft","marginRight","palette","mode","opacity","AirbnbThumbComponent","other","RangeSlider","defaultValue","SliderProps","valueLabelFormat","setValue","px","pt","pb","valueLabelDisplay","Thumb","newValue","usePikaso","options","registerShapes","instance","setInstance","ref","useRef","useEffect","editor","Pikaso","container","current","window","addEventListener","board","rescale","Label","useTitle","selection","transformer","borderStroke","anchorFill","shapes","insert","x","y","tag","fill","cornerRadius","text","fontSize","mb","margin","shape","find","updateText","updateTag","min","max","radius","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","document","prevTitleRef","_title"],"sourceRoot":""}