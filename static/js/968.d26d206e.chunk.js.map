{"version":3,"file":"static/js/968.d26d206e.chunk.js","mappings":"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","sources":["components/CodeHighlighter/index.tsx","components/Markdown/index.tsx","hooks/use-pikaso.ts","pages/Core/Background/LoadFromFile.tsx"],"sourcesContent":["import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dracula as theme } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\n// materialDark\n\nimport type { SyntaxHighlighterProps } from 'react-syntax-highlighter'\n\ninterface Props extends SyntaxHighlighterProps {\n  children: string\n}\n\nexport function CodeHighlighter({ children, ...props }: Props) {\n  return (\n    <SyntaxHighlighter style={theme} showLineNumbers wrapLongLines {...props}>\n      {children}\n    </SyntaxHighlighter>\n  )\n}\n","import { useMemo } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport { Link } from 'react-router-dom'\n\nimport { CodeHighlighter } from '../CodeHighlighter'\n\ninterface Props {\n  children: string | (() => string)\n}\n\nfunction normalizeText(input: string): string {\n  const output = []\n  const values = input.split('\\n')\n  let skipTrim = false\n\n  const isCodeBlock = (value = '') =>\n    value.startsWith('```') || value.startsWith('~~~')\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i]\n\n    if (isCodeBlock(value)) {\n      skipTrim = true\n    }\n\n    output.push(skipTrim ? value : value.trim())\n\n    if (skipTrim && isCodeBlock(values[i + 1])) {\n      skipTrim = false\n    }\n  }\n\n  return output.join('\\n')\n}\n\nexport function Markdown({ children }: Props) {\n  const value = typeof children === 'string' ? children : children()\n  const normalized = useMemo(() => normalizeText(value), [value])\n\n  return (\n    <ReactMarkdown\n      skipHtml\n      remarkPlugins={[gfm]}\n      children={normalized}\n      components={{\n        a({ href, children }) {\n          const isExternalLink =\n            href?.startsWith('/api/') || href?.startsWith('http')\n\n          return isExternalLink ? (\n            <a href={href} target=\"_blank\">\n              {children}\n            </a>\n          ) : (\n            <Link to={href!}>{children}</Link>\n          )\n        },\n        code({ node, inline, className, children, ...props }) {\n          const match = /language-(\\w+)/.exec(className || '')\n          return !inline && match ? (\n            // @ts-ignore\n            <CodeHighlighter\n              children={String(children).replace(/\\n$/, '')}\n              language={match[1]}\n              PreTag=\"div\"\n              {...props}\n            />\n          ) : (\n            <code className={className} {...props}>\n              {children}\n            </code>\n          )\n        }\n      }}\n    />\n  )\n}\n","import { useRef, useState, useEffect, RefObject } from 'react'\n\nimport { Pikaso } from 'pikaso'\nimport type { Settings, BaseShapes, RegisterShapesFn } from 'pikaso'\n\nexport default function usePikaso<T extends BaseShapes = BaseShapes>(\n  options: Partial<Settings> = {},\n  registerShapes?: RegisterShapesFn<T>\n): [RefObject<HTMLDivElement>, Pikaso<T> | null] {\n  const [instance, setInstance] = useState<Pikaso<T> | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const editor = new Pikaso<T>(\n      {\n        container: ref.current as HTMLDivElement,\n        ...options\n      },\n      registerShapes\n    )\n\n    setInstance(editor)\n  }, [])\n\n  useEffect(() => {\n    instance &&\n      window.addEventListener('resize', () => {\n        instance.board.rescale()\n      })\n  }, [instance])\n\n  return [ref, instance]\n}\n","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Card,\n  Box,\n  Button,\n  Typography,\n  CardActions,\n  CardContent\n} from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport { CodeHighlighter } from 'src/components/CodeHighlighter'\nimport { Markdown } from 'src/components/Markdown'\nimport usePikaso from 'src/hooks/use-pikaso'\n\nconst code = `// load image file\neditor.board.background.setImageFromFile('<ImageFile>')\n\n// Alternatively, you may use\neditor.loadFromFile('<ImageFile>')`\n\nexport function LoadFromFile() {\n  const [ref, editor] = usePikaso()\n\n  const handleImageFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target?.files?.[0]\n\n    if (!file) {\n      return\n    }\n\n    editor?.loadFromFile(file)\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography variant=\"h6\" sx={{ width: '30%', flexShrink: 0 }}>\n          loadFromFile\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Card sx={{ mb: 4 }}>\n          <Box my={1}>\n            <div\n              ref={ref}\n              style={{\n                margin: '0 auto',\n                background: '#f5f5f5',\n                width: '600px',\n                height: '400px'\n              }}\n            />\n          </Box>\n\n          <CardActions sx={{ justifyContent: 'flex-end' }}>\n            <Button variant=\"contained\" component=\"label\">\n              Select Image From Computer\n              <input\n                accept=\"image/*\"\n                type=\"file\"\n                hidden\n                onChange={handleImageFile}\n              />\n            </Button>\n          </CardActions>\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" component=\"div\">\n              <Markdown>\n                {() =>\n                  `[setImageFromFile](/api/classes/Background.html#setImageFromFile)`\n                }\n              </Markdown>\n            </Typography>\n            <CodeHighlighter language=\"typescript\">{code}</CodeHighlighter>\n          </CardContent>\n        </Card>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n"],"names":["CodeHighlighter","children","props","style","theme","showLineNumbers","wrapLongLines","Markdown","value","normalized","useMemo","input","output","values","split","skipTrim","isCodeBlock","startsWith","i","length","push","trim","join","normalizeText","skipHtml","remarkPlugins","gfm","components","a","href","target","to","code","node","inline","className","match","exec","String","replace","language","PreTag","usePikaso","options","registerShapes","useState","instance","setInstance","ref","useRef","useEffect","editor","Pikaso","container","current","window","addEventListener","board","rescale","LoadFromFile","expandIcon","variant","sx","width","flexShrink","mb","my","margin","background","height","justifyContent","component","accept","type","hidden","onChange","e","file","files","loadFromFile","gutterBottom"],"sourceRoot":""}