{"version":3,"sources":["pages/Core/Shapes/ShapeModel.tsx","pages/Core/Shapes/ShapeModels/Ellipse.tsx"],"names":["ShapeModel","type","codes","insertFn","sx","mb","onLoad","gutterBottom","variant","component","language","insert","size","color","EllipseModel","ShapesList","find","shape","title"],"mappings":"wIAAA,4HAmBO,SAASA,EAAT,GAAsD,EAAhCC,KAAiC,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,SACxC,OACE,8BACE,eAAC,IAAD,CAAMC,GAAI,CAAEC,GAAI,GAAhB,UACE,cAAC,cAAD,CAAaC,OAAQH,IACrB,eAAC,IAAD,WACE,cAAC,IAAD,CAAYI,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,oBAIA,cAAC,IAAD,CAAiBC,SAAS,aAA1B,SACGR,EAAMS,YAIX,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,KAAK,QAAQC,MAAM,UAAUL,QAAQ,YAA7C,iC,iCCnCV,2EAIMN,EAAQ,CACZS,OAAO,0GASM,SAASG,IAAgB,IAAD,EACrC,OACE,cAAC,aAAD,CACEb,KAAK,UACLC,MAAOA,EACPC,SAAQ,UAAEY,aAAWC,MAAK,SAAAC,GAAK,MAAoB,YAAhBA,EAAMC,gBAAjC,aAAE,EAAqDP","file":"static/js/45.4ea6fe51.chunk.js","sourcesContent":["import {\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Typography\n} from '@mui/material'\nimport { Pikaso } from 'pikaso'\n\nimport { CodeHighlighter } from 'src/components/CodeHighlighter'\n\nimport { EditorShape } from './EditorShape'\n\ninterface Props {\n  type: string\n  codes: Record<string, string>\n  insertFn: (edior: Pikaso) => void\n}\n\nexport function ShapeModel({ type, codes, insertFn }: Props) {\n  return (\n    <div>\n      <Card sx={{ mb: 4 }}>\n        <EditorShape onLoad={insertFn} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            Insert\n          </Typography>\n\n          <CodeHighlighter language=\"typescript\">\n            {codes.insert}\n          </CodeHighlighter>\n        </CardContent>\n\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" variant=\"contained\">\n            Learn more\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n","import { ShapeModel } from '../ShapeModel'\n\nimport { ShapesList } from '..'\n\nconst codes = {\n  insert: `editor.shapes.rect.insert({\n  width: 150,\n  height: 150,\n  x: 100,\n  y: 100,\n  fill: 'purple'\n})`\n}\n\nexport default function EllipseModel() {\n  return (\n    <ShapeModel\n      type=\"Ellipse\"\n      codes={codes}\n      insertFn={ShapesList.find(shape => shape.title === 'Ellipse')?.insert!}\n    />\n  )\n}\n"],"sourceRoot":""}