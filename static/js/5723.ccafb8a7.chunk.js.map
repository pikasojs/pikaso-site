{"version":3,"file":"static/js/5723.ccafb8a7.chunk.js","mappings":"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","sources":["components/CodeHighlighter/index.tsx","components/Markdown/index.tsx","hooks/use-pikaso.ts","pages/Advanced/CreateCustomShapes/Heart/HeartDrawer.ts","pages/Advanced/CreateCustomShapes/Heart/HeartModel.ts","pages/Advanced/CreateCustomShapes/index.tsx","../node_modules/react-use/esm/useTitle.js"],"sourcesContent":["import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dracula as theme } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\n// materialDark\n\nimport type { SyntaxHighlighterProps } from 'react-syntax-highlighter'\n\ninterface Props extends SyntaxHighlighterProps {\n  children: string\n}\n\nexport function CodeHighlighter({ children, ...props }: Props) {\n  return (\n    <SyntaxHighlighter style={theme} showLineNumbers wrapLongLines {...props}>\n      {children}\n    </SyntaxHighlighter>\n  )\n}\n","import { useMemo } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport { Link } from 'react-router-dom'\n\nimport { CodeHighlighter } from '../CodeHighlighter'\n\ninterface Props {\n  children: string | (() => string)\n}\n\nfunction normalizeText(input: string): string {\n  const output = []\n  const values = input.split('\\n')\n  let skipTrim = false\n\n  const isCodeBlock = (value = '') =>\n    value.startsWith('```') || value.startsWith('~~~')\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i]\n\n    if (isCodeBlock(value)) {\n      skipTrim = true\n    }\n\n    output.push(skipTrim ? value : value.trim())\n\n    if (skipTrim && isCodeBlock(values[i + 1])) {\n      skipTrim = false\n    }\n  }\n\n  return output.join('\\n')\n}\n\nexport function Markdown({ children }: Props) {\n  const value = typeof children === 'string' ? children : children()\n  const normalized = useMemo(() => normalizeText(value), [value])\n\n  return (\n    <ReactMarkdown\n      skipHtml\n      remarkPlugins={[gfm]}\n      children={normalized}\n      components={{\n        a({ href, children }) {\n          const isExternalLink =\n            href?.startsWith('/api/') || href?.startsWith('http')\n\n          return isExternalLink ? (\n            <a href={href} target=\"_blank\">\n              {children}\n            </a>\n          ) : (\n            <Link to={href!}>{children}</Link>\n          )\n        },\n        code({ node, inline, className, children, ...props }) {\n          const match = /language-(\\w+)/.exec(className || '')\n          return !inline && match ? (\n            // @ts-ignore\n            <CodeHighlighter\n              children={String(children).replace(/\\n$/, '')}\n              language={match[1]}\n              PreTag=\"div\"\n              {...props}\n            />\n          ) : (\n            <code className={className} {...props}>\n              {children}\n            </code>\n          )\n        }\n      }}\n    />\n  )\n}\n","import { useRef, useState, useEffect, RefObject } from 'react'\n\nimport { Pikaso } from 'pikaso'\nimport type { Settings, BaseShapes, RegisterShapesFn } from 'pikaso'\n\nexport default function usePikaso<T extends BaseShapes = BaseShapes>(\n  options: Partial<Settings> = {},\n  registerShapes?: RegisterShapesFn<T>\n): [RefObject<HTMLDivElement>, Pikaso<T> | null] {\n  const [instance, setInstance] = useState<Pikaso<T> | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const editor = new Pikaso<T>(\n      {\n        container: ref.current as HTMLDivElement,\n        ...options\n      },\n      registerShapes\n    )\n\n    setInstance(editor)\n  }, [])\n\n  useEffect(() => {\n    instance &&\n      window.addEventListener('resize', () => {\n        instance.board.rescale()\n      })\n  }, [instance])\n\n  return [ref, instance]\n}\n","import { Konva, Board, ShapeDrawer, getPointsDistance } from 'pikaso'\n\nimport { HeartModel } from './HeartModel'\n\nexport class HeartDrawer extends ShapeDrawer<Konva.Path, Konva.PathConfig> {\n  public node: Konva.Path | null = null\n\n  constructor(board: Board) {\n    super(board, 'Heart')\n  }\n\n  /**\n   * @inheritdoc\n   * @override\n   */\n  public insert(config: Konva.PathConfig): HeartModel {\n    return super.insert(config)\n  }\n\n  /**\n   * @inheritdoc\n   * @override\n   */\n  public draw(config: Partial<Konva.PathConfig> = {}) {\n    super.draw(config)\n  }\n\n  /**\n   * @inheritdoc\n   * @override\n   */\n  protected createShape(config: Omit<Konva.PathConfig, 'data'>): HeartModel {\n    this.node = new Konva.Path({\n      fill: 'red',\n      ...config,\n      data: 'M12 21.593c-5.63-5.539-11-10.297-11-14.402 0-3.791 3.068-5.191 5.281-5.191 1.312 0 4.151.501 5.719 4.457 1.59-3.968 4.464-4.447 5.726-4.447 2.54 0 5.274 1.621 5.274 5.181 0 4.069-5.136 8.625-11 14.402'\n    })\n\n    return new HeartModel(this.board, this.node)\n  }\n\n  /**\n   * Starts drawing a heart shape\n   */\n  protected onStartDrawing() {\n    super.onStartDrawing()\n\n    if (!this.isDrawing) {\n      return\n    }\n\n    this.createShape({\n      x: this.startPoint.x,\n      y: this.startPoint.y,\n      scaleX: 0,\n      scaleY: 0,\n      ...this.config\n    })\n  }\n\n  /**\n   * Continues drawing the heart by changing its scale\n   */\n  protected onDrawing(e: Konva.KonvaEventObject<MouseEvent>) {\n    super.onDrawing(e)\n\n    if (!this.node) {\n      return\n    }\n\n    const point = this.board.stage.getPointerPosition()!\n    const distance = getPointsDistance(point, this.getShapePosition())\n\n    this.node.setAttrs({\n      x: point.x - this.node.width(),\n      scaleX: distance / 10,\n      scaleY: distance / 10\n    })\n  }\n}\n","import { Konva, rotateAroundCenter, ShapeModel } from 'pikaso'\n\nexport class HeartModel extends ShapeModel<Konva.Path, Konva.PathConfig> {\n  public get type() {\n    return 'heart'\n  }\n\n  public rotate(theta: number) {\n    rotateAroundCenter(this.node, theta)\n\n    this.board.events.emit('shape:rotate', {\n      shapes: [this]\n    })\n  }\n}\n","import { useEffect } from 'react'\nimport { Box } from '@mui/material'\nimport { useTitle } from 'react-use'\nimport raw from 'raw.macro'\nimport type { BaseShapes } from 'pikaso'\n\nimport usePikaso from 'src/hooks/use-pikaso'\nimport { Markdown } from 'src/components/Markdown'\n\nimport { HeartDrawer } from './Heart/HeartDrawer'\n\nconst doc = raw('./doc.md')\n\ninterface Shapes extends BaseShapes {\n  heart: HeartDrawer\n}\n\nexport default function CreateCustomShapes() {\n  useTitle('Pikaso | Advanced | Create Custom Shapes')\n\n  const [ref, editor] = usePikaso<Shapes>(\n    {\n      selection: {\n        transformer: {\n          borderStroke: '#262626',\n          anchorFill: '#262626'\n        }\n      }\n    },\n    board => ({\n      heart: new HeartDrawer(board)\n    })\n  )\n\n  useEffect(() => {\n    if (editor) {\n      const shape = editor.shapes.heart.insert({\n        x: 100,\n        y: 100,\n        scale: {\n          x: 6,\n          y: 6\n        }\n      })\n\n      shape.to({\n        duration: 10,\n        x: editor.board.stage.width() - shape.node.width()\n      })\n\n      editor.shapes.heart.draw()\n    }\n  }, [editor])\n\n  return (\n    <div>\n      <Box mb={3}>\n        <div\n          ref={ref}\n          style={{\n            margin: '0 auto',\n            background: '#CBC3E3',\n            width: '100%',\n            height: '300px'\n          }}\n        />\n      </Box>\n\n      <Markdown>{doc}</Markdown>\n    </div>\n  )\n}\n","import { useEffect, useRef } from 'react';\nvar DEFAULT_USE_TITLE_OPTIONS = {\n    restoreOnUnmount: false,\n};\nfunction useTitle(title, options) {\n    if (options === void 0) { options = DEFAULT_USE_TITLE_OPTIONS; }\n    var prevTitleRef = useRef(document.title);\n    if (document.title !== title)\n        document.title = title;\n    useEffect(function () {\n        if (options && options.restoreOnUnmount) {\n            return function () {\n                document.title = prevTitleRef.current;\n            };\n        }\n        else {\n            return;\n        }\n    }, []);\n}\nexport default typeof document !== 'undefined' ? useTitle : function (_title) { };\n"],"names":["CodeHighlighter","children","props","style","theme","showLineNumbers","wrapLongLines","Markdown","value","normalized","useMemo","input","output","values","split","skipTrim","isCodeBlock","startsWith","i","length","push","trim","join","normalizeText","skipHtml","remarkPlugins","gfm","components","a","href","target","to","code","node","inline","className","match","exec","String","replace","language","PreTag","usePikaso","options","registerShapes","useState","instance","setInstance","ref","useRef","useEffect","editor","Pikaso","container","current","window","addEventListener","board","rescale","HeartDrawer","config","this","Konva","fill","data","HeartModel","isDrawing","createShape","x","startPoint","y","scaleX","scaleY","e","point","stage","getPointerPosition","distance","getPointsDistance","getShapePosition","setAttrs","width","ShapeDrawer","theta","rotateAroundCenter","events","emit","shapes","ShapeModel","CreateCustomShapes","useTitle","selection","transformer","borderStroke","anchorFill","heart","shape","insert","scale","duration","draw","mb","margin","background","height","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","document","title","prevTitleRef","_title"],"sourceRoot":""}