{"version":3,"file":"static/js/5282.215e63c9.chunk.js","mappings":"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","sources":["components/CodeHighlighter/index.tsx","components/Markdown/index.tsx","components/ReleaseBanner/index.tsx","hooks/use-pikaso.ts","pages/Core/MeasurementTag/index.tsx","../node_modules/react-use/esm/useTitle.js"],"sourcesContent":["import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dracula as theme } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\n// materialDark\n\nimport type { SyntaxHighlighterProps } from 'react-syntax-highlighter'\n\ninterface Props extends SyntaxHighlighterProps {\n  children: string\n}\n\nexport function CodeHighlighter({ children, ...props }: Props) {\n  return (\n    <SyntaxHighlighter style={theme} showLineNumbers wrapLongLines {...props}>\n      {children}\n    </SyntaxHighlighter>\n  )\n}\n","import { useMemo } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport { Link } from 'react-router-dom'\n\nimport { CodeHighlighter } from '../CodeHighlighter'\n\ninterface Props {\n  children: string | (() => string)\n}\n\nfunction normalizeText(input: string): string {\n  const output = []\n  const values = input.split('\\n')\n  let skipTrim = false\n\n  const isCodeBlock = (value = '') =>\n    value.startsWith('```') || value.startsWith('~~~')\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i]\n\n    if (isCodeBlock(value)) {\n      skipTrim = true\n    }\n\n    output.push(skipTrim ? value : value.trim())\n\n    if (skipTrim && isCodeBlock(values[i + 1])) {\n      skipTrim = false\n    }\n  }\n\n  return output.join('\\n')\n}\n\nexport function Markdown({ children }: Props) {\n  const value = typeof children === 'string' ? children : children()\n  const normalized = useMemo(() => normalizeText(value), [value])\n\n  return (\n    <ReactMarkdown\n      skipHtml\n      remarkPlugins={[gfm]}\n      children={normalized}\n      components={{\n        a({ href, children }) {\n          const isExternalLink =\n            href?.startsWith('/api/') || href?.startsWith('http')\n\n          return isExternalLink ? (\n            <a href={href} target=\"_blank\">\n              {children}\n            </a>\n          ) : (\n            <Link to={href!}>{children}</Link>\n          )\n        },\n        code({ node, inline, className, children, ...props }) {\n          const match = /language-(\\w+)/.exec(className || '')\n          return !inline && match ? (\n            // @ts-ignore\n            <CodeHighlighter\n              children={String(children).replace(/\\n$/, '')}\n              language={match[1]}\n              PreTag=\"div\"\n              {...props}\n            />\n          ) : (\n            <code className={className} {...props}>\n              {children}\n            </code>\n          )\n        }\n      }}\n    />\n  )\n}\n","import { makeStyles } from '@mui/styles'\nimport type { Theme } from '@mui/material'\n\nconst useStyles = makeStyles(\n  (theme: Theme) => ({\n    root: {\n      borderLeft: '4px solid #d1f2a5',\n      backgroundColor: '#effab4',\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(2, 1),\n      fontWeight: 600\n    }\n  }),\n  {\n    name: 'ReleaseBanner'\n  }\n)\n\ninterface Props {\n  text: string\n}\n\nexport function ReleaseBanner({ text }: Props) {\n  const classes = useStyles()\n  return <div className={classes.root}>{text}</div>\n}\n","import { useRef, useState, useEffect, RefObject } from 'react'\n\nimport { Pikaso } from 'pikaso'\nimport type { Settings, BaseShapes, RegisterShapesFn } from 'pikaso'\n\nexport default function usePikaso<T extends BaseShapes = BaseShapes>(\n  options: Partial<Settings> = {},\n  registerShapes?: RegisterShapesFn<T>\n): [RefObject<HTMLDivElement>, Pikaso<T> | null] {\n  const [instance, setInstance] = useState<Pikaso<T> | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const editor = new Pikaso<T>(\n      {\n        container: ref.current as HTMLDivElement,\n        ...options\n      },\n      registerShapes\n    )\n\n    setInstance(editor)\n  }, [])\n\n  useEffect(() => {\n    instance &&\n      window.addEventListener('resize', () => {\n        instance.board.rescale()\n      })\n  }, [instance])\n\n  return [ref, instance]\n}\n","import { useEffect } from 'react'\nimport { useTitle } from 'react-use'\nimport raw from 'raw.macro'\n\nimport usePikaso from 'src/hooks/use-pikaso'\nimport { Markdown } from 'src/components/Markdown'\nimport { ReleaseBanner } from 'src/components/ReleaseBanner'\n\nconst doc = raw('./doc.md')\n\nexport default function Rotation() {\n  useTitle('Pikaso | Core Components | Rotation')\n  const [ref, editor] = usePikaso({\n    measurement: {\n      background: {\n        cornerRadius: 5,\n        fill: 'purple'\n      },\n      text: {\n        fill: '#fff',\n        padding: 5,\n        fontSize: 14,\n        fontStyle: 'bold'\n      }\n    }\n  })\n\n  useEffect(() => {\n    const run = async () => {\n      if (!editor) {\n        return\n      }\n\n      const shape = editor.shapes.rect.insert({\n        width: 200,\n        height: 100,\n        x: 400,\n        y: 200,\n        fill: 'red'\n      })\n\n      shape.select()\n    }\n\n    run()\n  }, [editor])\n\n  return (\n    <>\n      <ReleaseBanner text=\"New as of v2.5.0\" />\n      <Markdown>{doc}</Markdown>\n\n      <div\n        ref={ref}\n        style={{\n          margin: '0 auto',\n          background: '#CBC3E3',\n          width: '100%',\n          height: '500px'\n        }}\n      />\n    </>\n  )\n}\n","import { useEffect, useRef } from 'react';\nvar DEFAULT_USE_TITLE_OPTIONS = {\n    restoreOnUnmount: false,\n};\nfunction useTitle(title, options) {\n    if (options === void 0) { options = DEFAULT_USE_TITLE_OPTIONS; }\n    var prevTitleRef = useRef(document.title);\n    if (document.title !== title)\n        document.title = title;\n    useEffect(function () {\n        if (options && options.restoreOnUnmount) {\n            return function () {\n                document.title = prevTitleRef.current;\n            };\n        }\n        else {\n            return;\n        }\n    }, []);\n}\nexport default typeof document !== 'undefined' ? useTitle : function (_title) { };\n"],"names":["CodeHighlighter","children","props","style","theme","showLineNumbers","wrapLongLines","Markdown","value","normalized","useMemo","input","output","values","split","skipTrim","isCodeBlock","startsWith","i","length","push","trim","join","normalizeText","skipHtml","remarkPlugins","gfm","components","a","href","target","to","code","node","inline","className","match","exec","String","replace","language","PreTag","useStyles","makeStyles","root","borderLeft","backgroundColor","marginBottom","spacing","padding","fontWeight","name","ReleaseBanner","text","classes","usePikaso","options","registerShapes","useState","instance","setInstance","ref","useRef","useEffect","editor","Pikaso","container","current","window","addEventListener","board","rescale","Rotation","useTitle","measurement","background","cornerRadius","fill","fontSize","fontStyle","run","shapes","rect","insert","width","height","x","y","select","margin","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","document","title","prevTitleRef","_title"],"sourceRoot":""}