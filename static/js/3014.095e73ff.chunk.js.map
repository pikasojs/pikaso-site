{"version":3,"file":"static/js/3014.095e73ff.chunk.js","mappings":"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","sources":["components/BasePopover/index.tsx","components/CodeHighlighter/index.tsx","components/ColorPicker/index.tsx","components/Markdown/index.tsx","components/RangeSlider/index.tsx","hooks/use-pikaso.ts","pages/Core/Cropper/Playground/CropperType/index.tsx","pages/Core/Cropper/Playground/index.tsx","pages/Core/Cropper/index.tsx","../node_modules/react-use/esm/useTitle.js"],"sourcesContent":["import { useState } from 'react'\nimport { Button, Popover } from '@mui/material'\n\ninterface ButtonProps {\n  id: string | undefined\n  isOpen: boolean\n}\n\ninterface Props {\n  buttonRenderer: (buttonProps: ButtonProps) => React.ReactNode\n  children:\n    | React.ReactNode\n    | (({ close }: { close: () => void }) => React.ReactNode)\n}\n\nexport function BasePopover({ buttonRenderer, children }: Props) {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const handleOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? `base-popover` : undefined\n\n  return (\n    <>\n      <Button\n        disableRipple\n        aria-describedby={id}\n        style={{\n          background: 'none',\n          cursor: 'pointer'\n        }}\n        onClick={handleOpen}\n      >\n        {buttonRenderer({\n          id,\n          isOpen: open\n        })}\n      </Button>\n\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n      >\n        {typeof children === 'function'\n          ? children({ close: handleClose })\n          : children}\n      </Popover>\n    </>\n  )\n}\n","import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dracula as theme } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\n// materialDark\n\nimport type { SyntaxHighlighterProps } from 'react-syntax-highlighter'\n\ninterface Props extends SyntaxHighlighterProps {\n  children: string\n}\n\nexport function CodeHighlighter({ children, ...props }: Props) {\n  return (\n    <SyntaxHighlighter style={theme} showLineNumbers wrapLongLines {...props}>\n      {children}\n    </SyntaxHighlighter>\n  )\n}\n","import { useState } from 'react'\nimport { Avatar, Chip } from '@mui/material'\nimport { SketchPicker } from 'react-color'\nimport type { ColorResult } from 'react-color'\n\nimport { BasePopover } from '../BasePopover'\n\ninterface Props {\n  title: string\n  defaultColor: string\n  onChange: (color: string) => void\n}\n\nexport function ColorPicker({ title, defaultColor, onChange }: Props) {\n  const [color, setColor] = useState(defaultColor)\n\n  const onSwatchHover = (color: ColorResult) => {\n    setColor(color.hex)\n    onChange(color.hex)\n  }\n\n  const onChangeColor = (color: ColorResult) => {\n    setColor(color.hex)\n    onChange(color.hex)\n  }\n\n  return (\n    <BasePopover\n      buttonRenderer={({ id, isOpen }) => (\n        <Chip\n          aria-describedby={id}\n          size=\"medium\"\n          avatar={\n            <Avatar\n              sx={{\n                bgcolor: color,\n                borderColor: 'primary.main'\n              }}\n            >\n              &nbsp;\n            </Avatar>\n          }\n          label={<strong>{title}</strong>}\n          variant=\"outlined\"\n          color=\"info\"\n          sx={{\n            cursor: 'pointer',\n            borderColor: isOpen ? 'primary.main' : 'info',\n            color: isOpen ? 'primary.main' : 'info'\n          }}\n        />\n      )}\n    >\n      <SketchPicker\n        color={color}\n        presetColors={[]}\n        onSwatchHover={onSwatchHover}\n        onChange={onChangeColor}\n      />\n    </BasePopover>\n  )\n}\n","import { useMemo } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport { Link } from 'react-router-dom'\n\nimport { CodeHighlighter } from '../CodeHighlighter'\n\ninterface Props {\n  children: string | (() => string)\n}\n\nfunction normalizeText(input: string): string {\n  const output = []\n  const values = input.split('\\n')\n  let skipTrim = false\n\n  const isCodeBlock = (value = '') =>\n    value.startsWith('```') || value.startsWith('~~~')\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i]\n\n    if (isCodeBlock(value)) {\n      skipTrim = true\n    }\n\n    output.push(skipTrim ? value : value.trim())\n\n    if (skipTrim && isCodeBlock(values[i + 1])) {\n      skipTrim = false\n    }\n  }\n\n  return output.join('\\n')\n}\n\nexport function Markdown({ children }: Props) {\n  const value = typeof children === 'string' ? children : children()\n  const normalized = useMemo(() => normalizeText(value), [value])\n\n  return (\n    <ReactMarkdown\n      skipHtml\n      remarkPlugins={[gfm]}\n      children={normalized}\n      components={{\n        a({ href, children }) {\n          const isExternalLink =\n            href?.startsWith('/api/') || href?.startsWith('http')\n\n          return isExternalLink ? (\n            <a href={href} target=\"_blank\">\n              {children}\n            </a>\n          ) : (\n            <Link to={href!}>{children}</Link>\n          )\n        },\n        code({ node, inline, className, children, ...props }) {\n          const match = /language-(\\w+)/.exec(className || '')\n          return !inline && match ? (\n            // @ts-ignore\n            <CodeHighlighter\n              children={String(children).replace(/\\n$/, '')}\n              language={match[1]}\n              PreTag=\"div\"\n              {...props}\n            />\n          ) : (\n            <code className={className} {...props}>\n              {children}\n            </code>\n          )\n        }\n      }}\n    />\n  )\n}\n","import { useState } from 'react'\nimport { Box, Avatar, Chip, Slider, SliderThumb } from '@mui/material'\nimport type { SliderProps } from '@mui/material/Slider'\n\nimport { styled } from '@mui/styles'\nimport type { Theme } from '@mui/material'\n\nimport { BasePopover } from '../BasePopover'\n\nconst AirbnbSlider = styled(Slider)(({ theme }: { theme: Theme }) => ({\n  color: '#3a8589',\n  height: 3,\n  padding: '13px 0',\n  '& .MuiSlider-thumb': {\n    height: 27,\n    width: 27,\n    backgroundColor: '#fff',\n    border: '1px solid currentColor',\n    '&:hover': {\n      boxShadow: '0 0 0 8px rgba(58, 133, 137, 0.16)'\n    },\n    '& .airbnb-bar': {\n      height: 9,\n      width: 1,\n      backgroundColor: 'currentColor',\n      marginLeft: 1,\n      marginRight: 1\n    }\n  },\n  '& .MuiSlider-track': {\n    height: 3\n  },\n  '& .MuiSlider-rail': {\n    color: theme.palette.mode === 'dark' ? '#bfbfbf' : '#d8d8d8',\n    opacity: theme.palette.mode === 'dark' ? undefined : 1,\n    height: 3\n  }\n}))\n\ninterface AirbnbThumbComponentProps extends React.HTMLAttributes<unknown> {}\n\nfunction AirbnbThumbComponent(props: AirbnbThumbComponentProps) {\n  const { children, ...other } = props\n  return (\n    <SliderThumb {...other}>\n      {children}\n      <span className=\"airbnb-bar\" />\n      <span className=\"airbnb-bar\" />\n      <span className=\"airbnb-bar\" />\n    </SliderThumb>\n  )\n}\n\ninterface Props {\n  title: string\n  defaultValue: number | number[]\n  SliderProps?: SliderProps\n  valueLabelFormat?: (value: number | number[]) => string | number | number[]\n  onChange: (value: number | number[]) => void\n}\n\nexport function RangeSlider({\n  title,\n  defaultValue,\n  SliderProps,\n  valueLabelFormat = value => value,\n  onChange\n}: Props) {\n  const [value, setValue] = useState(defaultValue)\n\n  const onChangeSlider = (event: Event, newValue: number | number[]) => {\n    setValue(newValue)\n    onChange(newValue)\n  }\n\n  return (\n    <BasePopover\n      buttonRenderer={({ id, isOpen }) => (\n        <Chip\n          aria-describedby={id}\n          size=\"medium\"\n          avatar={\n            <Avatar\n              sx={{\n                borderColor: 'primary.main'\n              }}\n            >\n              {typeof valueLabelFormat === 'function'\n                ? valueLabelFormat(value)\n                : value ?? ''}\n            </Avatar>\n          }\n          label={<strong>{title}</strong>}\n          variant=\"outlined\"\n          color=\"info\"\n          sx={{\n            cursor: 'pointer',\n            borderColor: isOpen ? 'primary.main' : 'info',\n            color: isOpen ? 'primary.main' : 'info'\n          }}\n        />\n      )}\n    >\n      <Box px={4} pt={5} pb={2} width=\"300px\">\n        <AirbnbSlider\n          valueLabelDisplay=\"on\"\n          components={{ Thumb: AirbnbThumbComponent }}\n          valueLabelFormat={valueLabelFormat}\n          {...SliderProps}\n          value={value}\n          onChange={onChangeSlider}\n        />\n      </Box>\n    </BasePopover>\n  )\n}\n","import { useRef, useState, useEffect, RefObject } from 'react'\n\nimport { Pikaso } from 'pikaso'\nimport type { Settings, BaseShapes, RegisterShapesFn } from 'pikaso'\n\nexport default function usePikaso<T extends BaseShapes = BaseShapes>(\n  options: Partial<Settings> = {},\n  registerShapes?: RegisterShapesFn<T>\n): [RefObject<HTMLDivElement>, Pikaso<T> | null] {\n  const [instance, setInstance] = useState<Pikaso<T> | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const editor = new Pikaso<T>(\n      {\n        container: ref.current as HTMLDivElement,\n        ...options\n      },\n      registerShapes\n    )\n\n    setInstance(editor)\n  }, [])\n\n  useEffect(() => {\n    instance &&\n      window.addEventListener('resize', () => {\n        instance.board.rescale()\n      })\n  }, [instance])\n\n  return [ref, instance]\n}\n","import { Box, Button, Chip } from '@mui/material'\nimport type { CropperOptions } from 'pikaso'\n\nimport { BasePopover } from 'src/components/BasePopover'\n\nconst Types = [\n  {\n    fixed: false,\n    circular: false\n  },\n  {\n    fixed: false,\n    circular: true\n  },\n  {\n    fixed: true,\n    circular: false\n  },\n  {\n    fixed: true,\n    circular: true\n  }\n]\n\ninterface Props {\n  config: Partial<CropperOptions>\n  onChange: (config: { fixed: boolean; circular: boolean }) => void\n}\n\nexport function CropperType({ config, onChange }: Props) {\n  return (\n    <BasePopover\n      buttonRenderer={({ id, isOpen }) => (\n        <Chip\n          aria-describedby={id}\n          size=\"medium\"\n          label={\n            <>\n              <strong>{config.fixed ? 'Fixed' : 'Flexible'}</strong>\n              {' - '}\n              <strong>{config.circular ? 'Circular' : 'Rectangular'}</strong>\n            </>\n          }\n          variant=\"outlined\"\n          color=\"info\"\n          sx={{\n            cursor: 'pointer',\n            borderColor: isOpen ? 'primary.main' : 'info',\n            color: isOpen ? 'primary.main' : 'info'\n          }}\n        />\n      )}\n    >\n      {({ close }) => (\n        <Box sx={{ px: 2, py: 2, maxWidth: '450px' }}>\n          {Types.map((type, index) => (\n            <Button\n              key={index}\n              variant={\n                type.fixed === config.fixed && type.circular === config.circular\n                  ? 'contained'\n                  : 'outlined'\n              }\n              size=\"small\"\n              sx={{ mr: 1, mb: 1, width: '200px' }}\n              onClick={() => {\n                close()\n                onChange({\n                  fixed: type.fixed,\n                  circular: type.circular\n                })\n              }}\n            >\n              {type.fixed ? 'Fixed' : 'Flexible'} &{' '}\n              {type.circular ? 'Circular' : 'Rectangular'}\n            </Button>\n          ))}\n        </Box>\n      )}\n    </BasePopover>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDeepCompareEffect, useDebounce } from 'react-use'\nimport { defaultTransformerSettings } from 'pikaso'\nimport type { CropperOptions } from 'pikaso'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  TextField,\n  Typography\n} from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport usePikaso from 'src/hooks/use-pikaso'\nimport { CodeHighlighter } from 'src/components/CodeHighlighter'\n\nimport { ColorPicker } from 'src/components/ColorPicker'\n\nimport { RangeSlider } from 'src/components/RangeSlider'\n\nimport { BasePopover } from 'src/components/BasePopover'\n\nimport { CropperType } from './CropperType'\n\nexport function Playground() {\n  const [ref, editor] = usePikaso()\n  const [config, setConfig] = useState<Partial<CropperOptions>>({\n    transformer: defaultTransformerSettings,\n    circular: false,\n    fixed: false,\n    keepRatio: true,\n    aspectRatio: 1,\n    minWidth: 100,\n    minHeight: 100,\n    marginRatio: 1.1,\n    overlay: {\n      color: '#262626',\n      opacity: 0.5\n    },\n    guides: {\n      show: true,\n      count: 3,\n      color: '#eee',\n      width: 2,\n      dash: [15, 10, 15]\n    }\n  })\n  const [debouncedConfig, setDebouncedConfig] = useState(config)\n\n  const [,/* cancel */] = useDebounce(\n    () => {\n      setDebouncedConfig(config)\n    },\n    200,\n    [config]\n  )\n\n  const updateConfig = (config: Partial<CropperOptions>) => {\n    setConfig(state => ({\n      ...state,\n      ...config\n    }))\n  }\n\n  useDeepCompareEffect(() => {\n    editor?.cropper.stop()\n    editor?.cropper.start(config)\n  }, [debouncedConfig])\n\n  useEffect(() => {\n    const run = async () => {\n      if (editor) {\n        await editor.loadFromUrl(\n          'https://images.unsplash.com/photo-1548199973-03cce0bbc87b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1738&q=80'\n        )\n        editor.cropper.start(config)\n      }\n    }\n\n    run()\n  }, [editor])\n\n  const code = `editor.cropper.start(${JSON.stringify(config, null, 2)})`\n\n  return (\n    <>\n      <div\n        ref={ref}\n        style={{\n          margin: '0 auto',\n          width: '600px',\n          height: '400px'\n        }}\n      />\n\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h6\">General Settings</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box display=\"flex\" alignItems=\"center\" mb={2}>\n            <CropperType config={config} onChange={updateConfig} />\n\n            <VerticalDivider />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={config.keepRatio}\n                  onChange={(_, checked: boolean) => {\n                    updateConfig({ keepRatio: checked })\n                  }}\n                />\n              }\n              label=\"Keep Ratio\"\n            />\n\n            <VerticalDivider />\n\n            <RangeSlider\n              title=\"Margin Ratio\"\n              defaultValue={config.marginRatio!}\n              SliderProps={{\n                min: 0,\n                max: 5\n              }}\n              onChange={value => {\n                setConfig({\n                  ...config,\n                  marginRatio: value as number\n                })\n              }}\n            />\n\n            <VerticalDivider />\n\n            {config.circular === false && (\n              <RangeSlider\n                title=\"Aspect Ratio\"\n                defaultValue={config.aspectRatio!}\n                valueLabelFormat={(val: number | number[]) =>\n                  val < 0 ? `0.${-val}` : val.toString()\n                }\n                SliderProps={{\n                  min: -9,\n                  max: 10\n                }}\n                onChange={value => {\n                  const val = value as number\n\n                  setConfig({\n                    ...config,\n                    aspectRatio: val < 0 ? Number((-val / 10).toFixed(2)) : val\n                  })\n                }}\n              />\n            )}\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h6\">Overlay Settings</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box display=\"flex\" alignItems=\"center\" mb={2}>\n            <ColorPicker\n              title=\"Overlay Color\"\n              defaultColor={config.overlay!.color!}\n              onChange={color =>\n                setConfig({\n                  ...config,\n                  overlay: {\n                    ...config.overlay,\n                    color\n                  }\n                })\n              }\n            />\n            <VerticalDivider />\n\n            <RangeSlider\n              title=\"Overlay Opacity\"\n              defaultValue={config.overlay!.opacity!}\n              SliderProps={{\n                min: 0,\n                max: 1,\n                step: 0.1\n              }}\n              onChange={value =>\n                setConfig({\n                  ...config,\n                  overlay: {\n                    ...config.overlay,\n                    opacity: value as number\n                  }\n                })\n              }\n            />\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h6\">Transformer Settings</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" mb={2}>\n            <ColorPicker\n              title=\"Stroke Color\"\n              defaultColor={config.transformer?.borderStroke!}\n              onChange={color =>\n                setConfig({\n                  ...config,\n                  transformer: {\n                    ...config.transformer,\n                    borderStroke: color\n                  }\n                })\n              }\n            />\n            <RangeSlider\n              title=\"Stroke Width\"\n              defaultValue={config.transformer?.borderStrokeWidth!}\n              SliderProps={{\n                min: 3,\n                max: 20,\n                step: 1\n              }}\n              onChange={value =>\n                setConfig({\n                  ...config,\n                  transformer: {\n                    ...config.transformer,\n                    borderStrokeWidth: value as number\n                  }\n                })\n              }\n            />\n            <VerticalDivider />\n            <ColorPicker\n              title=\"Anchor Color\"\n              defaultColor={config.transformer?.anchorFill!}\n              onChange={color =>\n                setConfig({\n                  ...config,\n                  transformer: {\n                    ...config.transformer,\n                    anchorFill: color\n                  }\n                })\n              }\n            />\n\n            <ColorPicker\n              title=\"Anchor Stroke Color\"\n              defaultColor={config.transformer?.anchorStroke!}\n              onChange={color =>\n                setConfig({\n                  ...config,\n                  transformer: {\n                    ...config.transformer,\n                    anchorStroke: color\n                  }\n                })\n              }\n            />\n\n            <RangeSlider\n              title=\"Anchor Radius\"\n              defaultValue={config.transformer?.anchorCornerRadius!}\n              SliderProps={{\n                min: 0,\n                max: 50,\n                step: 1\n              }}\n              onChange={value =>\n                setConfig({\n                  ...config,\n                  transformer: {\n                    ...config.transformer,\n                    anchorCornerRadius: value as number\n                  }\n                })\n              }\n            />\n\n            <RangeSlider\n              title=\"Anchor Stroke Width\"\n              defaultValue={config.transformer?.anchorStrokeWidth!}\n              SliderProps={{\n                min: 0,\n                max: 50,\n                step: 1\n              }}\n              onChange={value =>\n                setConfig({\n                  ...config,\n                  transformer: {\n                    ...config.transformer,\n                    anchorStrokeWidth: value as number\n                  }\n                })\n              }\n            />\n\n            <RangeSlider\n              title=\"Anchor Size\"\n              defaultValue={config.transformer?.anchorSize!}\n              SliderProps={{\n                min: 1,\n                max: 50,\n                step: 1\n              }}\n              onChange={value =>\n                setConfig({\n                  ...config,\n                  transformer: {\n                    ...config.transformer,\n                    anchorSize: value as number\n                  }\n                })\n              }\n            />\n\n            <VerticalDivider />\n\n            <BasePopover\n              buttonRenderer={({ id, isOpen }) => (\n                <Chip\n                  aria-describedby={id}\n                  size=\"medium\"\n                  label={<strong>Dash Lines</strong>}\n                  variant=\"outlined\"\n                  color=\"info\"\n                  sx={{\n                    cursor: 'pointer',\n                    borderColor: isOpen ? 'primary.main' : 'info',\n                    color: isOpen ? 'primary.main' : 'info'\n                  }}\n                />\n              )}\n            >\n              <TextField\n                value={config.transformer?.borderDash || ''}\n                onChange={e =>\n                  setConfig({\n                    ...config,\n                    transformer: {\n                      ...config.transformer,\n                      borderDash: e.target.value.trim().split(',').map(Number)\n                    }\n                  })\n                }\n              />\n            </BasePopover>\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h6\">Guide Line Settings</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box display=\"flex\" alignItems=\"center\" mb={2}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={config.guides?.show}\n                  onChange={(_, checked: boolean) => {\n                    updateConfig({\n                      ...config,\n                      guides: {\n                        ...config.guides,\n                        show: checked\n                      }\n                    })\n                  }}\n                />\n              }\n              label=\"Show Guid Lines\"\n            />\n\n            <VerticalDivider />\n\n            <RangeSlider\n              title=\"Lines Count\"\n              defaultValue={config.guides!.count!}\n              SliderProps={{\n                min: 3,\n                max: 20,\n                step: 1\n              }}\n              onChange={value =>\n                setConfig({\n                  ...config,\n                  guides: {\n                    ...config.guides,\n                    count: value as number\n                  }\n                })\n              }\n            />\n\n            <VerticalDivider />\n\n            <RangeSlider\n              title=\"Lines Width\"\n              defaultValue={config.guides!.width!}\n              SliderProps={{\n                min: 1,\n                max: 20,\n                step: 1\n              }}\n              onChange={value =>\n                setConfig({\n                  ...config,\n                  guides: {\n                    ...config.guides,\n                    width: value as number\n                  }\n                })\n              }\n            />\n            <VerticalDivider />\n\n            <ColorPicker\n              title=\"Lines Color\"\n              defaultColor={config.guides!.color!}\n              onChange={color =>\n                setConfig({\n                  ...config,\n                  guides: {\n                    ...config.guides,\n                    color\n                  }\n                })\n              }\n            />\n\n            <VerticalDivider />\n            <BasePopover\n              buttonRenderer={({ id, isOpen }) => (\n                <Chip\n                  aria-describedby={id}\n                  size=\"medium\"\n                  label={<strong>Dash Lines</strong>}\n                  variant=\"outlined\"\n                  color=\"info\"\n                  sx={{\n                    cursor: 'pointer',\n                    borderColor: isOpen ? 'primary.main' : 'info',\n                    color: isOpen ? 'primary.main' : 'info'\n                  }}\n                />\n              )}\n            >\n              <TextField\n                value={config.guides?.dash || ''}\n                onChange={e =>\n                  setConfig({\n                    ...config,\n                    guides: {\n                      ...config.guides,\n                      dash: e.target.value.trim().split(',').map(Number)\n                    }\n                  })\n                }\n              />\n            </BasePopover>\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n\n      <Divider sx={{ my: 4 }} />\n\n      <CodeHighlighter language=\"typescript\">{code}</CodeHighlighter>\n    </>\n  )\n}\n\nconst VerticalDivider = () => (\n  <Divider orientation=\"vertical\" sx={{ mx: 2, height: '16px' }} />\n)\n","import { Box } from '@mui/material'\nimport { useTitle } from 'react-use'\n\nimport { Markdown } from 'src/components/Markdown'\n\nimport { Playground } from './Playground'\n\nexport default function Cropper() {\n  useTitle('Pikaso | Core Components | Cropper')\n\n  return (\n    <>\n      <Box>\n        <Markdown>\n          {() => `\n        # Cropper\n        Cropper component offers different types of croppings that are **Flexible Rectangle Cropping**, **Flexible Circular Cropping**, **Fixed Rectangle Cropping** and **Fixed Circular Cropping**.\n\n        All the cropping types are fully customizable.\n        \n        ### API Reference\n        **[Cropper API Reference](/api/classes/Cropper.html)**\n\n        ### Playground:\n      `}\n        </Markdown>\n      </Box>\n\n      <Playground />\n    </>\n  )\n}\n","import { useEffect, useRef } from 'react';\nvar DEFAULT_USE_TITLE_OPTIONS = {\n    restoreOnUnmount: false,\n};\nfunction useTitle(title, options) {\n    if (options === void 0) { options = DEFAULT_USE_TITLE_OPTIONS; }\n    var prevTitleRef = useRef(document.title);\n    if (document.title !== title)\n        document.title = title;\n    useEffect(function () {\n        if (options && options.restoreOnUnmount) {\n            return function () {\n                document.title = prevTitleRef.current;\n            };\n        }\n        else {\n            return;\n        }\n    }, []);\n}\nexport default typeof document !== 'undefined' ? useTitle : function (_title) { };\n"],"names":["BasePopover","buttonRenderer","children","useState","anchorEl","setAnchorEl","handleClose","open","Boolean","id","undefined","disableRipple","style","background","cursor","onClick","event","currentTarget","isOpen","onClose","anchorOrigin","vertical","horizontal","close","CodeHighlighter","props","theme","showLineNumbers","wrapLongLines","ColorPicker","title","defaultColor","onChange","color","setColor","size","avatar","sx","bgcolor","borderColor","label","variant","presetColors","onSwatchHover","hex","Markdown","value","normalized","useMemo","input","output","values","split","skipTrim","isCodeBlock","startsWith","i","length","push","trim","join","normalizeText","skipHtml","remarkPlugins","gfm","components","a","href","target","to","code","node","inline","className","match","exec","String","replace","language","PreTag","AirbnbSlider","styled","Slider","height","padding","width","backgroundColor","border","boxShadow","marginLeft","marginRight","palette","mode","opacity","AirbnbThumbComponent","other","RangeSlider","defaultValue","SliderProps","valueLabelFormat","setValue","px","pt","pb","valueLabelDisplay","Thumb","newValue","usePikaso","options","registerShapes","instance","setInstance","ref","useRef","useEffect","editor","Pikaso","container","current","window","addEventListener","board","rescale","Types","fixed","circular","CropperType","config","py","maxWidth","map","type","index","mr","mb","Playground","transformer","defaultTransformerSettings","keepRatio","aspectRatio","minWidth","minHeight","marginRatio","overlay","guides","show","count","dash","setConfig","debouncedConfig","setDebouncedConfig","useDebounce","updateConfig","state","useDeepCompareEffect","cropper","stop","start","run","loadFromUrl","JSON","stringify","margin","expandIcon","display","alignItems","VerticalDivider","control","checked","_","min","max","val","toString","Number","toFixed","step","flexWrap","borderStroke","borderStrokeWidth","anchorFill","anchorStroke","anchorCornerRadius","anchorStrokeWidth","anchorSize","borderDash","e","my","orientation","mx","Cropper","useTitle","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","document","prevTitleRef","_title"],"sourceRoot":""}